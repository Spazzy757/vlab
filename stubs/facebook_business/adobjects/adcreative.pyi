from facebook_business.adobjects.abstractcrudobject import AbstractCrudObject as AbstractCrudObject
from facebook_business.adobjects.abstractobject import AbstractObject as AbstractObject
from facebook_business.adobjects.objectparser import ObjectParser as ObjectParser
from facebook_business.api import FacebookRequest as FacebookRequest
from facebook_business.mixins import HasAdLabels as HasAdLabels
from facebook_business.typechecker import TypeChecker as TypeChecker
from typing import Any, Optional

class AdCreative(AbstractCrudObject, HasAdLabels):
    def __init__(self, fbid: Optional[Any] = ..., parent_id: Optional[Any] = ..., api: Optional[Any] = ...) -> None: ...
    class Field(AbstractObject.Field):
        account_id: str = ...
        actor_id: str = ...
        adlabels: str = ...
        applink_treatment: str = ...
        asset_feed_spec: str = ...
        authorization_category: str = ...
        auto_update: str = ...
        body: str = ...
        branded_content_sponsor_page_id: str = ...
        bundle_folder_id: str = ...
        call_to_action_type: str = ...
        categorization_criteria: str = ...
        category_media_source: str = ...
        destination_set_id: str = ...
        dynamic_ad_voice: str = ...
        effective_authorization_category: str = ...
        effective_instagram_media_id: str = ...
        effective_instagram_story_id: str = ...
        effective_object_story_id: str = ...
        enable_direct_install: str = ...
        enable_launch_instant_app: str = ...
        id: str = ...
        image_crops: str = ...
        image_hash: str = ...
        image_url: str = ...
        instagram_actor_id: str = ...
        instagram_permalink_url: str = ...
        instagram_story_id: str = ...
        interactive_components_spec: str = ...
        link_deep_link_url: str = ...
        link_destination_display_url: str = ...
        link_og_id: str = ...
        link_url: str = ...
        messenger_sponsored_message: str = ...
        name: str = ...
        object_id: str = ...
        object_store_url: str = ...
        object_story_id: str = ...
        object_story_spec: str = ...
        object_type: str = ...
        object_url: str = ...
        place_page_set_id: str = ...
        platform_customizations: str = ...
        playable_asset_id: str = ...
        portrait_customizations: str = ...
        product_set_id: str = ...
        recommender_settings: str = ...
        status: str = ...
        template_url: str = ...
        template_url_spec: str = ...
        thumbnail_url: str = ...
        title: str = ...
        url_tags: str = ...
        use_page_actor_override: str = ...
        video_id: str = ...
        call_to_action: str = ...
        image_file: str = ...
        instant_checkout_setting: str = ...
        is_dco_internal: str = ...
    class ApplinkTreatment:
        deeplink_with_appstore_fallback: str = ...
        deeplink_with_web_fallback: str = ...
        web_only: str = ...
    class CallToActionType:
        add_to_cart: str = ...
        apply_now: str = ...
        book_travel: str = ...
        buy: str = ...
        buy_now: str = ...
        buy_tickets: str = ...
        call: str = ...
        call_me: str = ...
        contact: str = ...
        contact_us: str = ...
        donate: str = ...
        donate_now: str = ...
        download: str = ...
        event_rsvp: str = ...
        find_a_group: str = ...
        find_your_groups: str = ...
        follow_news_storyline: str = ...
        follow_page: str = ...
        follow_user: str = ...
        get_directions: str = ...
        get_offer: str = ...
        get_offer_view: str = ...
        get_quote: str = ...
        get_showtimes: str = ...
        install_app: str = ...
        install_mobile_app: str = ...
        learn_more: str = ...
        like_page: str = ...
        listen_music: str = ...
        listen_now: str = ...
        message_page: str = ...
        mobile_download: str = ...
        moments: str = ...
        no_button: str = ...
        open_link: str = ...
        order_now: str = ...
        pay_to_access: str = ...
        play_game: str = ...
        purchase_gift_cards: str = ...
        record_now: str = ...
        request_time: str = ...
        say_thanks: str = ...
        see_more: str = ...
        sell_now: str = ...
        share: str = ...
        shop_now: str = ...
        sign_up: str = ...
        sotto_subscribe: str = ...
        subscribe: str = ...
        update_app: str = ...
        use_app: str = ...
        use_mobile_app: str = ...
        video_annotation: str = ...
        visit_pages_feed: str = ...
        watch_more: str = ...
        watch_video: str = ...
        whatsapp_message: str = ...
        woodhenge_support: str = ...
    class ObjectType:
        application: str = ...
        domain: str = ...
        event: str = ...
        invalid: str = ...
        offer: str = ...
        page: str = ...
        photo: str = ...
        post_deleted: str = ...
        privacy_check_fail: str = ...
        share: str = ...
        status: str = ...
        store_item: str = ...
        video: str = ...
    class Status:
        active: str = ...
        deleted: str = ...
        in_process: str = ...
        with_issues: str = ...
    class AuthorizationCategory:
        none: str = ...
        political: str = ...
    class CategorizationCriteria:
        brand: str = ...
        category: str = ...
        product_type: str = ...
    class CategoryMediaSource:
        category: str = ...
        mixed: str = ...
        products_collage: str = ...
        products_slideshow: str = ...
    class DynamicAdVoice:
        dynamic: str = ...
        story_owner: str = ...
    class InstantCheckoutSetting:
        off: str = ...
        on: str = ...
    class Operator:
        all: str = ...
        any: str = ...
    @classmethod
    def get_endpoint(cls): ...
    def api_create(self, parent_id: Any, fields: Optional[Any] = ..., params: Optional[Any] = ..., batch: Optional[Any] = ..., success: Optional[Any] = ..., failure: Optional[Any] = ..., pending: bool = ...): ...
    def api_delete(self, fields: Optional[Any] = ..., params: Optional[Any] = ..., batch: Optional[Any] = ..., success: Optional[Any] = ..., failure: Optional[Any] = ..., pending: bool = ...): ...
    def api_get(self, fields: Optional[Any] = ..., params: Optional[Any] = ..., batch: Optional[Any] = ..., success: Optional[Any] = ..., failure: Optional[Any] = ..., pending: bool = ...): ...
    def api_update(self, fields: Optional[Any] = ..., params: Optional[Any] = ..., batch: Optional[Any] = ..., success: Optional[Any] = ..., failure: Optional[Any] = ..., pending: bool = ...): ...
    def create_ad_label(self, fields: Optional[Any] = ..., params: Optional[Any] = ..., batch: Optional[Any] = ..., success: Optional[Any] = ..., failure: Optional[Any] = ..., pending: bool = ...): ...
    def get_creative_insights(self, fields: Optional[Any] = ..., params: Optional[Any] = ..., batch: Optional[Any] = ..., success: Optional[Any] = ..., failure: Optional[Any] = ..., pending: bool = ...): ...
    def get_previews(self, fields: Optional[Any] = ..., params: Optional[Any] = ..., batch: Optional[Any] = ..., success: Optional[Any] = ..., failure: Optional[Any] = ..., pending: bool = ...): ...
