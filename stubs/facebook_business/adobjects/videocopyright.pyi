from facebook_business.adobjects.abstractcrudobject import AbstractCrudObject as AbstractCrudObject
from facebook_business.adobjects.abstractobject import AbstractObject as AbstractObject
from facebook_business.adobjects.objectparser import ObjectParser as ObjectParser
from facebook_business.api import FacebookRequest as FacebookRequest
from facebook_business.typechecker import TypeChecker as TypeChecker
from typing import Any, Optional

class VideoCopyright(AbstractCrudObject):
    def __init__(self, fbid: Optional[Any] = ..., parent_id: Optional[Any] = ..., api: Optional[Any] = ...) -> None: ...
    class Field(AbstractObject.Field):
        content_category: str = ...
        copyright_content_id: str = ...
        creator: str = ...
        excluded_ownership_segments: str = ...
        id: str = ...
        in_conflict: str = ...
        monitoring_status: str = ...
        monitoring_type: str = ...
        ownership_countries: str = ...
        reference_file: str = ...
        reference_file_disabled: str = ...
        reference_file_disabled_by_ops: str = ...
        reference_owner_id: str = ...
        rule_ids: str = ...
        tags: str = ...
        whitelisted_ids: str = ...
    class ContentCategory:
        episode: str = ...
        movie: str = ...
        web: str = ...
    class MonitoringType:
        audio_only: str = ...
        video_and_audio: str = ...
        video_only: str = ...
    def api_get(self, fields: Optional[Any] = ..., params: Optional[Any] = ..., batch: Optional[Any] = ..., success: Optional[Any] = ..., failure: Optional[Any] = ..., pending: bool = ...): ...
    def api_update(self, fields: Optional[Any] = ..., params: Optional[Any] = ..., batch: Optional[Any] = ..., success: Optional[Any] = ..., failure: Optional[Any] = ..., pending: bool = ...): ...
