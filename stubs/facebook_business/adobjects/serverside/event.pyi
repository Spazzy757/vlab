from facebook_business.adobjects.serverside.custom_data import CustomData as CustomData
from facebook_business.adobjects.serverside.user_data import UserData as UserData
from typing import Any

class Event:
    param_types: Any = ...
    def __init__(self, event_name: str=..., event_time: int=..., event_source_url: str=..., opt_out: bool=..., event_id: str=..., user_data: UserData=..., custom_data: CustomData=..., data_processing_options: list[str]=..., data_processing_options_country: int=..., data_processing_options_state: int=...) -> None: ...
    @property
    def event_name(self): ...
    @event_name.setter
    def event_name(self, event_name: Any) -> None: ...
    @property
    def event_time(self): ...
    @event_time.setter
    def event_time(self, event_time: Any) -> None: ...
    @property
    def event_source_url(self): ...
    @event_source_url.setter
    def event_source_url(self, event_source_url: Any) -> None: ...
    @property
    def opt_out(self): ...
    @opt_out.setter
    def opt_out(self, opt_out: Any) -> None: ...
    @property
    def event_id(self): ...
    @event_id.setter
    def event_id(self, event_id: Any) -> None: ...
    @property
    def user_data(self): ...
    @user_data.setter
    def user_data(self, user_data: Any) -> None: ...
    @property
    def custom_data(self): ...
    @custom_data.setter
    def custom_data(self, custom_data: Any) -> None: ...
    @property
    def data_processing_options(self): ...
    @data_processing_options.setter
    def data_processing_options(self, data_processing_options: Any) -> None: ...
    @property
    def data_processing_options_country(self): ...
    @data_processing_options_country.setter
    def data_processing_options_country(self, data_processing_options_country: Any) -> None: ...
    @property
    def data_processing_options_state(self): ...
    @data_processing_options_state.setter
    def data_processing_options_state(self, data_processing_options_state: Any) -> None: ...
    def normalize(self): ...
    def to_dict(self): ...
    def to_str(self): ...
    def __eq__(self, other: Any) -> Any: ...
    def __ne__(self, other: Any) -> Any: ...
