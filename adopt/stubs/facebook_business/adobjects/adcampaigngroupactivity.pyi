from facebook_business.adobjects.abstractcrudobject import AbstractCrudObject as AbstractCrudObject
from facebook_business.adobjects.abstractobject import AbstractObject as AbstractObject
from facebook_business.adobjects.objectparser import ObjectParser as ObjectParser
from facebook_business.api import FacebookRequest as FacebookRequest
from facebook_business.typechecker import TypeChecker as TypeChecker
from typing import Any, Optional

class AdCampaignGroupActivity(AbstractCrudObject):
    def __init__(self, fbid: Optional[Any] = ..., parent_id: Optional[Any] = ..., api: Optional[Any] = ...) -> None: ...
    class Field(AbstractObject.Field):
        budget_limit_new: str = ...
        budget_limit_old: str = ...
        buying_type_new: str = ...
        buying_type_old: str = ...
        event_time: str = ...
        event_type: str = ...
        id: str = ...
        is_autobid_new: str = ...
        is_autobid_old: str = ...
        is_average_price_pacing_new: str = ...
        is_average_price_pacing_old: str = ...
        name_new: str = ...
        name_old: str = ...
        objective_new: str = ...
        objective_old: str = ...
        pacing_type: str = ...
        run_status_new: str = ...
        run_status_old: str = ...
        spend_cap_new: str = ...
        spend_cap_old: str = ...
        time_created: str = ...
        time_updated_new: str = ...
        time_updated_old: str = ...
    class ObjectiveNew:
        app_installs: str = ...
        brand_awareness: str = ...
        canvas_app_engagement: str = ...
        canvas_app_installs: str = ...
        event_responses: str = ...
        lead_generation: str = ...
        link_clicks: str = ...
        local_awareness: str = ...
        messages: str = ...
        mobile_app_engagement: str = ...
        mobile_app_installs: str = ...
        none: str = ...
        offer_claims: str = ...
        page_likes: str = ...
        post_engagement: str = ...
        product_catalog_sales: str = ...
        video_views: str = ...
        website_conversions: str = ...
    class ObjectiveOld:
        app_installs: str = ...
        brand_awareness: str = ...
        canvas_app_engagement: str = ...
        canvas_app_installs: str = ...
        event_responses: str = ...
        lead_generation: str = ...
        link_clicks: str = ...
        local_awareness: str = ...
        messages: str = ...
        mobile_app_engagement: str = ...
        mobile_app_installs: str = ...
        none: str = ...
        offer_claims: str = ...
        page_likes: str = ...
        post_engagement: str = ...
        product_catalog_sales: str = ...
        video_views: str = ...
        website_conversions: str = ...
    def api_get(self, fields: Optional[Any] = ..., params: Optional[Any] = ..., batch: Optional[Any] = ..., success: Optional[Any] = ..., failure: Optional[Any] = ..., pending: bool = ...): ...
