from facebook_business.adobjects.abstractcrudobject import AbstractCrudObject as AbstractCrudObject
from facebook_business.adobjects.abstractobject import AbstractObject as AbstractObject
from facebook_business.adobjects.objectparser import ObjectParser as ObjectParser
from facebook_business.api import FacebookRequest as FacebookRequest
from facebook_business.typechecker import TypeChecker as TypeChecker
from typing import Any, Optional

class HomeListing(AbstractCrudObject):
    def __init__(self, fbid: Optional[Any] = ..., parent_id: Optional[Any] = ..., api: Optional[Any] = ...) -> None: ...
    class Field(AbstractObject.Field):
        ac_type: str = ...
        additional_fees_description: str = ...
        address: str = ...
        agent_company: str = ...
        agent_email: str = ...
        agent_fb_page_id: str = ...
        agent_name: str = ...
        agent_phone: str = ...
        applinks: str = ...
        area_size: str = ...
        area_unit: str = ...
        availability: str = ...
        co_2_emission_rating_eu: str = ...
        currency: str = ...
        days_on_market: str = ...
        description: str = ...
        energy_rating_eu: str = ...
        furnish_type: str = ...
        group_id: str = ...
        heating_type: str = ...
        home_listing_id: str = ...
        id: str = ...
        images: str = ...
        laundry_type: str = ...
        listing_type: str = ...
        max_currency: str = ...
        max_price: str = ...
        min_currency: str = ...
        min_price: str = ...
        name: str = ...
        num_baths: str = ...
        num_beds: str = ...
        num_rooms: str = ...
        num_units: str = ...
        parking_type: str = ...
        partner_verification: str = ...
        pet_policy: str = ...
        price: str = ...
        property_type: str = ...
        sanitized_images: str = ...
        url: str = ...
        year_built: str = ...
    @classmethod
    def get_endpoint(cls): ...
    def api_create(self, parent_id: Any, fields: Optional[Any] = ..., params: Optional[Any] = ..., batch: Optional[Any] = ..., success: Optional[Any] = ..., failure: Optional[Any] = ..., pending: bool = ...): ...
    def api_delete(self, fields: Optional[Any] = ..., params: Optional[Any] = ..., batch: Optional[Any] = ..., success: Optional[Any] = ..., failure: Optional[Any] = ..., pending: bool = ...): ...
    def api_get(self, fields: Optional[Any] = ..., params: Optional[Any] = ..., batch: Optional[Any] = ..., success: Optional[Any] = ..., failure: Optional[Any] = ..., pending: bool = ...): ...
    def api_update(self, fields: Optional[Any] = ..., params: Optional[Any] = ..., batch: Optional[Any] = ..., success: Optional[Any] = ..., failure: Optional[Any] = ..., pending: bool = ...): ...
