from facebook_business.adobjects.abstractcrudobject import AbstractCrudObject as AbstractCrudObject
from facebook_business.adobjects.abstractobject import AbstractObject as AbstractObject
from facebook_business.adobjects.objectparser import ObjectParser as ObjectParser
from facebook_business.api import FacebookRequest as FacebookRequest
from facebook_business.typechecker import TypeChecker as TypeChecker
from typing import Any, Optional

class AdCampaignActivity(AbstractCrudObject):
    def __init__(self, fbid: Optional[Any] = ..., parent_id: Optional[Any] = ..., api: Optional[Any] = ...) -> None: ...
    class Field(AbstractObject.Field):
        auto_create_lookalike_new: str = ...
        auto_create_lookalike_old: str = ...
        bid_adjustments_spec_new: str = ...
        bid_adjustments_spec_old: str = ...
        bid_amount_new: str = ...
        bid_amount_old: str = ...
        bid_constraints_new: str = ...
        bid_constraints_old: str = ...
        bid_info_new: str = ...
        bid_info_old: str = ...
        bid_strategy_new: str = ...
        bid_strategy_old: str = ...
        bid_type_new: str = ...
        bid_type_old: str = ...
        billing_event_new: str = ...
        billing_event_old: str = ...
        brande_audience_id_new: str = ...
        brande_audience_id_old: str = ...
        budget_limit_new: str = ...
        budget_limit_old: str = ...
        created_time: str = ...
        daily_impressions_new: str = ...
        daily_impressions_old: str = ...
        dco_mode_new: str = ...
        dco_mode_old: str = ...
        delivery_behavior_new: str = ...
        delivery_behavior_old: str = ...
        destination_type_new: str = ...
        destination_type_old: str = ...
        event_time: str = ...
        event_type: str = ...
        id: str = ...
        invoicing_limit_new: str = ...
        invoicing_limit_old: str = ...
        min_spend_target_new: str = ...
        min_spend_target_old: str = ...
        name_new: str = ...
        name_old: str = ...
        optimization_goal_new: str = ...
        optimization_goal_old: str = ...
        pacing_type_new: str = ...
        pacing_type_old: str = ...
        run_status_new: str = ...
        run_status_old: str = ...
        schedule_new: str = ...
        schedule_old: str = ...
        spend_cap_new: str = ...
        spend_cap_old: str = ...
        start_time_new: str = ...
        start_time_old: str = ...
        stop_time_new: str = ...
        stop_time_old: str = ...
        targeting_expansion_new: str = ...
        targeting_expansion_old: str = ...
        updated_time_new: str = ...
        updated_time_old: str = ...
    class BidStrategyNew:
        cost_cap: str = ...
        lowest_cost_without_cap: str = ...
        lowest_cost_with_bid_cap: str = ...
        target_cost: str = ...
    class BidStrategyOld:
        cost_cap: str = ...
        lowest_cost_without_cap: str = ...
        lowest_cost_with_bid_cap: str = ...
        target_cost: str = ...
    class BillingEventNew:
        app_installs: str = ...
        clicks: str = ...
        impressions: str = ...
        link_clicks: str = ...
        none: str = ...
        offer_claims: str = ...
        page_likes: str = ...
        post_engagement: str = ...
        thruplay: str = ...
    class BillingEventOld:
        app_installs: str = ...
        clicks: str = ...
        impressions: str = ...
        link_clicks: str = ...
        none: str = ...
        offer_claims: str = ...
        page_likes: str = ...
        post_engagement: str = ...
        thruplay: str = ...
    class OptimizationGoalNew:
        ad_recall_lift: str = ...
        app_downloads: str = ...
        app_installs: str = ...
        brand_awareness: str = ...
        clicks: str = ...
        derived_events: str = ...
        engaged_users: str = ...
        event_responses: str = ...
        impressions: str = ...
        landing_page_views: str = ...
        lead_generation: str = ...
        link_clicks: str = ...
        none: str = ...
        offer_claims: str = ...
        offsite_conversions: str = ...
        page_engagement: str = ...
        page_likes: str = ...
        post_engagement: str = ...
        reach: str = ...
        replies: str = ...
        social_impressions: str = ...
        thruplay: str = ...
        two_second_continuous_video_views: str = ...
        value: str = ...
        visit_instagram_profile: str = ...
    class OptimizationGoalOld:
        ad_recall_lift: str = ...
        app_downloads: str = ...
        app_installs: str = ...
        brand_awareness: str = ...
        clicks: str = ...
        derived_events: str = ...
        engaged_users: str = ...
        event_responses: str = ...
        impressions: str = ...
        landing_page_views: str = ...
        lead_generation: str = ...
        link_clicks: str = ...
        none: str = ...
        offer_claims: str = ...
        offsite_conversions: str = ...
        page_engagement: str = ...
        page_likes: str = ...
        post_engagement: str = ...
        reach: str = ...
        replies: str = ...
        social_impressions: str = ...
        thruplay: str = ...
        two_second_continuous_video_views: str = ...
        value: str = ...
        visit_instagram_profile: str = ...
    def api_get(self, fields: Optional[Any] = ..., params: Optional[Any] = ..., batch: Optional[Any] = ..., success: Optional[Any] = ..., failure: Optional[Any] = ..., pending: bool = ...): ...
