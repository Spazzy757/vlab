from facebook_business.adobjects.abstractcrudobject import AbstractCrudObject as AbstractCrudObject
from facebook_business.adobjects.abstractobject import AbstractObject as AbstractObject
from facebook_business.adobjects.objectparser import ObjectParser as ObjectParser
from facebook_business.api import FacebookRequest as FacebookRequest
from facebook_business.typechecker import TypeChecker as TypeChecker
from typing import Any, Optional

class AdAsyncRequest(AbstractCrudObject):
    def __init__(self, fbid: Optional[Any] = ..., parent_id: Optional[Any] = ..., api: Optional[Any] = ...) -> None: ...
    class Field(AbstractObject.Field):
        async_request_set: str = ...
        created_time: str = ...
        id: str = ...
        input: str = ...
        result: str = ...
        scope_object_id: str = ...
        status: str = ...
        type: str = ...
        updated_time: str = ...
    class Statuses:
        canceled: str = ...
        canceled_dependency: str = ...
        error: str = ...
        error_conflicts: str = ...
        error_dependency: str = ...
        initial: str = ...
        in_progress: str = ...
        pending_dependency: str = ...
        success: str = ...
        user_canceled: str = ...
        user_canceled_dependency: str = ...
    def api_delete(self, fields: Optional[Any] = ..., params: Optional[Any] = ..., batch: Optional[Any] = ..., success: Optional[Any] = ..., failure: Optional[Any] = ..., pending: bool = ...): ...
    def api_get(self, fields: Optional[Any] = ..., params: Optional[Any] = ..., batch: Optional[Any] = ..., success: Optional[Any] = ..., failure: Optional[Any] = ..., pending: bool = ...): ...
